# Puppet CI Resources

# Load puppet modules
classes:
  - nsidc_jenkins

nsidc_jenkins::use_vagrant: true

# Jenkins Plugins
nsidc_jenkins::plugins:
  git: {}
  git-client: {}
  git-parameter: {}
  scm-api: {}
  credentials: {}
  ssh-credentials: {}
  greenballs: {}
  jobConfigHistory: {}
  mailer: {}
  instant-messaging: {}
  jabber: {}
  ansicolor: {}

# CI Job Names
job_checkout_project: "%{hiera('project')}_01_Checkout_Project"
job_check_syntax: "%{hiera('project')}_02_Check_Syntax"
job_run_unit_tests: "%{hiera('project')}_03_Run_Unit_Tests"
job_run_acceptance_tests: "%{hiera('project')}_04_Run_Acceptance_Tests"
job_bump_version_and_tag: "%{hiera('project')}_10_Release_Bump_Version_and_Tag"
job_release_publish_latest: "%{hiera('project')}_11_Release_Publish_Latest"
job_destroy_vms: "%{hiera('project')}_99_Destroy_VMs"

# Jenkins Jobs
nsidc_jenkins::jobs:
  # clone the project into the shared workspace
  "%{hiera('job_checkout_project')}":
    git:
      repo: "%{hiera('gitrepo')}"
      branches: "*/%{hiera('gitbranch')}"
      checkout_local: "%{hiera('gitbranch')}"
      poll_scm: true
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "%{hiera('job_check_syntax')}"

  "%{hiera('job_check_syntax')}":
    command: rake lint
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "%{hiera('job_run_unit_tests')}"

  "%{hiera('job_run_unit_tests')}":
    command: rake spec:unit
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "%{hiera('job_run_acceptance_tests')}"

  "%{hiera('job_run_acceptance_tests')}":
    command: |
      set +e; vagrant nsidc hijack --env=integration; set -e
      rake spec:integration
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"

  # Jobs for performing a release.

  "%{hiera('job_bump_version_and_tag')}":
    git:
      repo: "%{hiera('gitrepo')}"
      poll_scm: false
    parameters:
      - type: string
        name: branch
        description: git branch to checkout and tag
        default: master
      - type: choice
        name: version_type
        choices:
          - patch
          - minor
          - major
    command: |
      git config --global user.name jenkins
      git config --global user.email jenkins@ci.%{hiera('project')}.apps.int.nsidc.org
      git checkout $branch
      rake bump[$version_type]
      git push origin master --tags
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/release
    trigger_job: "%{hiera('job_release_publish_latest')}"

  # This job is expecting that you have pushed up a branch called
  # latest to the repo.  The latest branch can be referenced with the
  # :ref => 'latest' option when calling the module in the consumer's Puppetfile.
  "%{hiera('job_release_publish_latest')}":
    command: |
      git fetch origin latest
      git checkout latest
      git pull
      git merge master
      git push origin latest
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/release


  # Jobs for destroying machines
  "%{hiera('job_destroy_vms')}":
    git:
      repo: "%{hiera('gitrepo')}"

    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/cleanup
    description: cleanup project (destroy all the machines)
    command: |

      # note that all commands (even if they fail) will eval to true
      #
      # this allows ALL environments to be cleaned up if one doesnt
      # exist
      #
      # you should monitor the output of this job for real errors

      # cleanup, hijack, destroy
      rm -rf .vagrant-integration
      (vagrant nsidc hijack --env=integration || true)
      (vagrant nsidc destroy --env=integration || true)

