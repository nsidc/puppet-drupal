# Puppet CI Resources

# Load puppet modules
classes:
  - nsidc_jenkins

# Jenkins Plugins
nsidc_jenkins::plugins:
  git: {}
  git-client: {}
  git-parameter: {}
  scm-api: {}
  credentials: {}
  ssh-credentials: {}
  greenballs: {}
  jobConfigHistory: {}
  mailer: {}
  instant-messaging: {}
  jabber: {}
  ansicolor: {}

# Jenkins Jobs
nsidc_jenkins::jobs:
  # clone the project into the shared workspace
  "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_1_Checkout_Project":
    git:
      repo: "%{hiera('gitrepo')}"
      branches: "*/%{hiera('gitbranch')}"
      checkout_local: "%{hiera('gitbranch')}"
      poll_scm: true
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_2_Configure_System"

  # use puppet to install system dependencies, such as Bundler
  "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_2_Configure_System":
    command: |
      #!/bin/bash -x
      cd puppet
      librarian-puppet clean || exit 1
      librarian-puppet update || exit 1
      cd -
      # with the --detailed-exitcodes flag, exit code of 2 means that changes
      # were made, i.e., puppet did stuff to your system like it's supposed to
      #
      # https://docs.puppetlabs.com/references/3.4.latest/man/agent.html
      sudo puppet apply --environment=ci %{::puppet_options} %{::puppet_manifest}
      (( $? == 0 || $? == 2 )) || exit 1
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_3_Check_Syntax"

  "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_3_Check_Syntax":
    command: rake lint
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_4_Run_Unit_Tests"

  "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_4_Run_Unit_Tests":
    command: rake spec:unit
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"
    trigger_job: "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_5_Run_Integration_Tests"

  "Project_%{hiera('project')}_Branch_%{hiera('gitbranch')}_5_Run_Integration_Tests":
    command: |
      set +e; vagrant nsidc hijack --env=integration; set -e
      rake spec:integration
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-%{hiera('gitbranch')}"

  # If your project builds a package, these jobs provide a template for the
  # release pipeline for your package. Just replace the commented-out rake
  # commands with your own project's task runner.
  "Project_%{hiera('project')}_Release_1_Bump_Version_and_Tag":
    parameters:
      - type: choice
        name: version_type
        choices:
          - patch
          - minor
          - major
    command: |
      rm -rf gitrepo
      git clone %{hiera('gitrepo')} gitrepo
      cd gitrepo
      bumpversion $version_type
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-release"
    trigger_job: "Project_%{hiera('project')}_Release_2_Build_Package"

  "Project_%{hiera('project')}_Release_2_Build_Package":
    command: 
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-release/gitrepo"
    trigger_job: "Project_%{hiera('project')}_Release_3_Publish_Package"

  "Project_%{hiera('project')}_Release_3_Publish_Package":
    command: |
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-release/gitrepo"
    trigger_job: "Project_%{hiera('project')}_Release_4_Push_to_Git"

  "Project_%{hiera('project')}_Release_4_Push_to_Git":
    command: "git push origin master --tags"
    workspace: "/var/lib/jenkins/workspace-%{hiera('project')}-release/gitrepo"

